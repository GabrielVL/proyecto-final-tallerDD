$date
	Sun Jun 15 12:34:28 2025
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module decoder_tb $end
$var reg 2 ! Op [1:0] $end
$var reg 6 " Funct [5:0] $end
$var reg 4 # Rd [3:0] $end
$var reg 2 $ FlagW [1:0] $end
$var reg 1 % PCS $end
$var reg 1 & RegW $end
$var reg 1 ' MemW $end
$var reg 1 ( MemtoReg $end
$var reg 1 ) ALUSrc $end
$var reg 2 * ImmSrc [1:0] $end
$var reg 2 + RegSrc [1:0] $end
$var reg 2 , ALUControl [1:0] $end

$scope module dut $end
$var wire 1 - Op [1] $end
$var wire 1 . Op [0] $end
$var wire 1 / Funct [5] $end
$var wire 1 0 Funct [4] $end
$var wire 1 1 Funct [3] $end
$var wire 1 2 Funct [2] $end
$var wire 1 3 Funct [1] $end
$var wire 1 4 Funct [0] $end
$var wire 1 5 Rd [3] $end
$var wire 1 6 Rd [2] $end
$var wire 1 7 Rd [1] $end
$var wire 1 8 Rd [0] $end
$var reg 2 9 FlagW [1:0] $end
$var reg 1 : PCS $end
$var reg 1 ; RegW $end
$var reg 1 < MemW $end
$var reg 1 = MemtoReg $end
$var reg 1 > ALUSrc $end
$var reg 2 ? ImmSrc [1:0] $end
$var reg 2 @ RegSrc [1:0] $end
$var reg 2 A ALUControl [1:0] $end
$var reg 10 B controls [9:0] $end
$var reg 1 C Branch $end
$var reg 1 D ALUOp $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b110100 "
b1010 #
b0 $
0%
1&
0'
0(
1)
b0 *
b0 +
b0 ,
b0 9
0:
1;
0<
0=
1>
b0 ?
b0 @
b0 A
b101001 B
0C
1D
0.
0-
04
03
12
01
10
1/
08
17
06
15
$end
#10000
b10001 "
b1 #
18
07
05
14
02
0/
b1001 B
b10 9
b11 9
b11 $
0>
0)
#20000
b1001 "
11
00
#30000
b0 "
b10 #
08
17
04
01
b10 A
b1 9
b0 9
b0 $
b10 ,
#40000
b1 !
1.
b1001110010 B
0D
1C
0;
1=
1>
b1 ?
b10 @
b10 +
b1 *
1)
1(
0&
1:
1%
b0 A
b0 ,
#50000
b1 "
b11 #
18
14
b1111000 B
0C
1;
b0 @
b0 +
1&
0:
0%
#60000
b10 !
b0 "
b0 #
08
07
04
0.
1-
b110100010 B
1C
0;
0=
b10 ?
b1 @
b1 +
b10 *
0(
0&
1:
1%
#70000
b0 !
b10000 "
b1111 #
18
17
16
15
10
0-
b1001 B
1D
0C
1;
0>
b0 ?
b0 @
b0 +
b0 *
0)
1&
#80000
b11 !
b0 "
b0 #
08
07
06
05
0:
0%
00
1.
1-
b0 B
b10 A
b10 ,
0D
0;
0&
b0 A
b0 ,
